/*

Copyright (c) 2023 Nico Proyer, nicoproyer.at
Permission is hereby granted, free of charge,
to any person obtaining a copy of this software
and associated documentation files (the “Software”),
to deal in the Software without restriction, including
without limitation the rights to use, copy,
modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit
persons to whom the Software is furnished to do so,
subject to the following conditions:The above copyright
notice and this permission notice shall be included
in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF
ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

License type: MIT

*/

#include <ArduinoJson.h>
#include "DHT.h"
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH1106.h>

#define OLED_RESET 13
/*
Here you can define your Build mode:
true = DEV           false = release
*/
#define dev true

Adafruit_SH1106 display(OLED_RESET);

#define I2C_ADDRESS 0x3C
long dauer = 0;
long entfernung = 0;

#define poti A0

#define JoyStickX A14
#define JoyStickY A15

#define resetButton 53

#define LDR_DATA A13

#define DistanceTRIG 7
#define DistanceECHO 6

#define DHT11_pin 48

#define advancedMetrics 49

#define DHTTYPE DHT11 // Es handelt sich um den DHT11 Sensor

bool snakeActive;

DHT dht(DHT11_pin, DHTTYPE);

bool messageComplete;
String incomingMessage;

const unsigned char bitMap_h[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0x00, 0x01, 0xc0, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x0f, 0x00, 0x03, 0x60, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x1f, 0x80, 0x06, 0x30, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x3f, 0xc0, 0x0c, 0x1c, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x7f, 0xe0, 0x18, 0x06, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0xff, 0xf0, 0x10, 0x03, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0f, 0xff, 0xc1, 0xff, 0xf8, 0x30, 0x01, 0x83, 0xff, 0xf0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1f, 0xff, 0xe3, 0xff, 0xfc, 0x60, 0x00, 0xe7, 0xff, 0xf8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3f, 0xff, 0xf7, 0xff, 0xfe, 0xc0, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xfe, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x3f, 0xff, 0xfe, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3f, 0xff, 0xf7, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1f, 0xff, 0xe3, 0xff, 0xfc, 0xc0, 0x00, 0x67, 0xff, 0xf8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0f, 0xff, 0xc1, 0xff, 0xf8, 0x60, 0x00, 0xc3, 0xff, 0xf0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0xff, 0xf0, 0x38, 0x01, 0x81, 0xff, 0xe0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x7f, 0xe0, 0x0c, 0x01, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x3f, 0xc0, 0x06, 0x02, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x1f, 0x80, 0x03, 0x06, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x0f, 0x00, 0x01, 0x8c, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0x00, 0x00, 0x78, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char bitMap_e[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1f, 0xf7, 0xc1, 0xff, 0x3c, 0x7b, 0xff, 0xbf, 0xf0, 0x07, 0xf8, 0x1f, 0x0f, 0x3c, 0xf1, 0xf0,
    0x1f, 0xf7, 0xc1, 0xff, 0x3c, 0x7b, 0xff, 0xbf, 0xf8, 0x1f, 0xfc, 0x1f, 0x8f, 0x3c, 0xf1, 0xe0,
    0x1f, 0xf7, 0xc1, 0xff, 0x3c, 0xf3, 0xff, 0xbf, 0xfc, 0x38, 0x3e, 0x1f, 0x8f, 0x3c, 0xf3, 0xe0,
    0x1f, 0x07, 0xc1, 0xf0, 0x3c, 0xf0, 0x7c, 0x3c, 0x7c, 0x73, 0xc7, 0x1f, 0x8f, 0x3c, 0xf3, 0xc0,
    0x1f, 0x07, 0xc1, 0xf0, 0x3d, 0xf0, 0x7c, 0x3c, 0x7c, 0x63, 0x83, 0x9f, 0xcf, 0x3c, 0xf3, 0xc0,
    0x1f, 0xe7, 0xc1, 0xfe, 0x3d, 0xe0, 0x7c, 0x3c, 0x7c, 0xc3, 0x01, 0x9f, 0xcf, 0x3c, 0xf7, 0xc0,
    0x1f, 0xe7, 0xc1, 0xfe, 0x3f, 0xe0, 0x7c, 0x3f, 0xfc, 0xc3, 0x01, 0x9e, 0xcf, 0x3c, 0xff, 0x80,
    0x1f, 0xe7, 0xc1, 0xfe, 0x3f, 0xe0, 0x7c, 0x3f, 0xf9, 0xff, 0x01, 0x9e, 0xef, 0x3c, 0xff, 0x80,
    0x1f, 0xe7, 0xc1, 0xfe, 0x3d, 0xe0, 0x7c, 0x3f, 0xf0, 0xc3, 0x01, 0x9e, 0xef, 0x3c, 0xf7, 0xc0,
    0x1f, 0x07, 0xc1, 0xf0, 0x3d, 0xf0, 0x7c, 0x3c, 0xf0, 0xc3, 0x01, 0x9e, 0x7f, 0x3c, 0xf3, 0xc0,
    0x1f, 0x07, 0xc1, 0xf0, 0x3c, 0xf0, 0x7c, 0x3c, 0xf0, 0x63, 0x83, 0x1e, 0x7f, 0x3c, 0xf3, 0xe0,
    0x1f, 0xe7, 0xfd, 0xff, 0x3c, 0xf0, 0x7c, 0x3c, 0x78, 0x70, 0x67, 0x1e, 0x7f, 0x3c, 0xf3, 0xe0,
    0x1f, 0xf7, 0xfd, 0xff, 0x3c, 0xf8, 0x7c, 0x3c, 0x78, 0x38, 0x1e, 0x1e, 0x3f, 0x3c, 0xf1, 0xe0,
    0x1f, 0xf7, 0xfd, 0xff, 0x3c, 0x78, 0x7c, 0x3c, 0x7c, 0x1f, 0xfc, 0x1e, 0x3f, 0x3c, 0xf1, 0xf0,
    0x1f, 0xf7, 0xfd, 0xff, 0x3c, 0x7c, 0x7c, 0x3c, 0x3c, 0x07, 0xf8, 0x1e, 0x3f, 0x3c, 0xf1, 0xf0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x12, 0x07, 0x81, 0x80, 0x00, 0x30, 0x08, 0x09, 0x01, 0x60, 0x10, 0x0e, 0x03, 0x81, 0x80, 0x70,
    0x12, 0x03, 0x01, 0x80, 0x00, 0x28, 0x08, 0x0d, 0x01, 0x40, 0x30, 0x08, 0x02, 0x01, 0x80, 0x58,
    0x12, 0x03, 0x01, 0x80, 0x00, 0x28, 0x08, 0x0d, 0x01, 0x40, 0x30, 0x08, 0x02, 0x01, 0x80, 0x48,
    0x1e, 0x03, 0x01, 0x80, 0x40, 0x38, 0x08, 0x0f, 0x01, 0xc0, 0x28, 0x0e, 0x03, 0x81, 0x80, 0x48,
    0x12, 0x03, 0x01, 0x80, 0x00, 0x20, 0x08, 0x0b, 0x01, 0x40, 0x28, 0x08, 0x02, 0x01, 0x80, 0x48,
    0x12, 0x03, 0x01, 0x80, 0x00, 0x20, 0x08, 0x0b, 0x01, 0x40, 0x78, 0x08, 0x02, 0x01, 0x80, 0x78,
    0x00, 0x02, 0x00, 0xc0, 0x00, 0x00, 0x08, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

void setup()
{
  pinMode(DistanceTRIG, OUTPUT);
  pinMode(DistanceECHO, INPUT);
  pinMode(advancedMetrics, INPUT);
  pinMode(resetButton, INPUT);

  Serial2.begin(115200);
  Serial.begin(9600);

  display.begin();
  display.clearDisplay();

  delay(1000);
  display.drawBitmap(0, -18, bitMap_h, 128, 64, WHITE);
  display.display();
  delay(2500);
  display.clearDisplay();
  display.drawBitmap(0, -18, bitMap_e, 128, 64, WHITE);
  display.display();
  delay(2500);
  display.clearDisplay();
  display.setTextSize(1.5);    // Setze die Textgröße
  display.setTextColor(WHITE); // Setze die Textfarbe
  display.setCursor(0, 0);     // Setze den Cursor auf die Anfangsposition
  display.println("Willkommen,");
  display.println("beim Tag der offenen Tuer, an der\nHTL Pinkafeld!");
  display.println();
  display.display();

  delay(2500);
  dht.begin();
}

void writeData();
void getStatus();

bool changed, changedSnake;
int advancedMetricsBtn = 0, descriptionButton = 0;

void loop()
{

  DynamicJsonDocument doc(1024);
  String ip, networkName, networkData;

  while (Serial2.available())
  {
    char inChar = (char)Serial2.read();
    networkData += inChar;

    if (inChar == '\n')
    {
      messageComplete = true;
    }
  }
  if (messageComplete)
  {
#if dev
    Serial.println(incomingMessage);
#endif
    // Deserialisiere den JSON-String
    DeserializationError error = deserializeJson(doc, networkData);

    // Prüfe auf Fehler
    if (error)
    {
#if dev
      Serial.print("deserializeJson() failed: ");
      Serial.println(error.f_str());
#endif
      return;
    }
    else
    {
      // ip = doc["ip"];
      // networkName = doc["networkName"];
    }
    messageComplete = false;
  }

  if (advancedMetricsBtn != digitalRead(advancedMetrics) || descriptionButton != digitalRead(resetButton))
  {
    changed = true;
  }
  else
  {
    changed = false;
  }

  if (snakeActive && !changedSnake)
  {
    display.clearDisplay();
    display.setTextSize(1);      // Setze die Textgröße
    display.setTextColor(WHITE); // Setze die Textfarbe
    display.setCursor(0, 0);     // Setze den Cursor auf die Anfangsposition
    display.println("Snake Spiel");
    display.println("Verwende den \n\"JoyStick\" um dich zu \nbewegen!");
    display.display();
    changedSnake = true;
  }
  else if (changed)
  {
    if (digitalRead(advancedMetrics) == 0 && digitalRead(resetButton) == 0)
    {
      display.clearDisplay();
      display.setTextSize(1);      // Setze die Textgröße
      display.setTextColor(WHITE); // Setze die Textfarbe
      display.setCursor(0, 0);     // Setze den Cursor auf die Anfangsposition
      display.println("Willkommen,");
      display.println("beim Tag der offenen Tuer, an der HTL Pinkafeld!");
      display.display();
      advancedMetricsBtn = 0;
      descriptionButton = 0;
      changedSnake = false;
    }
    else if (digitalRead(resetButton) == 1)
    {
      display.clearDisplay();
      display.setTextSize(0.5);    // Setze die Textgröße
      display.setTextColor(WHITE); // Setze die Textfarbe
      display.setCursor(0, 0);     // Setze den Cursor auf die Anfangsposition
      display.println("Dies ist ein Sensor\nBoard, hier kannst du\ndich austoben und\nfuenf verschiedene\nSensoren ausprobieren\nViel Spass!");
      display.display();
      descriptionButton = 1;
      advancedMetricsBtn = 0;
      changedSnake = false;
    }
    else
    {
      display.clearDisplay();
      display.setTextSize(1);      // Setze die Textgröße
      display.setTextColor(WHITE); // Setze die Textfarbe
      display.setCursor(0, 0);     // Setze den Cursor auf die Anfangsposition
      display.print("WIFI: ");
      display.println(networkName);
      display.print("IP: ");
      display.println(ip);
      display.display();
      descriptionButton = 0;
      advancedMetricsBtn = 1;
      changedSnake = false;
    }
  }

  writeData();
}

void getStatus()
{
  incomingMessage = ""; // Nachricht zurücksetzen
  while (Serial2.available())
  {
    char inChar = (char)Serial2.read();
    incomingMessage += inChar;

    if (inChar == '\n')
    {
      messageComplete = true;
    }
  }
  if (messageComplete)
  {
#if dev
    Serial.println(incomingMessage);
#endif

    if (incomingMessage[0] == 's')
    {
      snakeActive = true;
#if dev
      Serial.println("Changed!");
#endif
    }
    if (incomingMessage[0] == 'n')
    {
      snakeActive = false;
#if dev
      Serial.println("Changed!");
#endif
    }

    messageComplete = false;
  }
}

void writeData()
{

  StaticJsonDocument<1000>
      doc;

  bool distanceError;

  digitalWrite(DistanceTRIG, LOW);
  delay(5);
  digitalWrite(DistanceTRIG, HIGH);
  delay(10);
  digitalWrite(DistanceTRIG, LOW);
  dauer = pulseIn(DistanceECHO, HIGH);
  entfernung = (dauer / 2) * 0.03432;
  if (entfernung >= 500 || entfernung <= 0)
  {
    distanceError = true;
  }
  else
  {
    distanceError = false;
  }

  doc["poti"]["percent"] = round((float)analogRead(poti) / 10.2);
  doc["poti"]["value"] = analogRead(poti) - 4;
  doc["joystick"]["x"] = analogRead(JoyStickX); // TRIGGER: 500
  doc["joystick"]["y"] = analogRead(JoyStickY); // TRIGGER: 500
  doc["reset"] = digitalRead(resetButton);
  doc["DHT"]["humidity"] = dht.readHumidity();
  doc["DHT"]["temperature"] = dht.readTemperature();
  if (distanceError)
  {
    doc["Distance"]["Distance"] = distanceError;
  }
  else
  {
    doc["Distance"]["Distance"] = entfernung;
  }
  doc["ldr"]["value"] = analogRead(LDR_DATA);

  String output = "";
  serializeJson(doc, output);
  output += ';';
#if dev
  Serial.println(output);
#endif
  Serial2.println(output);
  delay(75);
}